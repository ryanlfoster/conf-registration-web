"use strict";angular.module("confRegistrationWebApp",["ngRoute","ngCookies","ui.bootstrap"]).config(function($routeProvider,$injector){$routeProvider.when("/",{templateUrl:"views/a390afa5.a390afa5.landing.html",controller:"landingCtrl"}).when("/register/:conferenceId",{resolve:{redirect:["$location","$route",function($location,$route){$location.path("/register/"+$route.current.params.conferenceId+"/page/")}]}}).when("/register/:conferenceId/page/:pageId?",{templateUrl:"views/1eca431a.1eca431a.registration.html",controller:"RegistrationCtrl",resolve:{enforceAuth:$injector.get("enforceAuth"),conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}],currentRegistration:["$route","RegistrationCache",function($route,RegistrationCache){return RegistrationCache.getCurrent($route.current.params.conferenceId)}]}}).when("/payment/:conferenceId",{templateUrl:"views/6d2928c8.6d2928c8.payment.html",controller:"paymentCtrl",resolve:{enforceAuth:$injector.get("enforceAuth"),registration:["$route","RegistrationCache",function($route,RegistrationCache){return RegistrationCache.getCurrent($route.current.params.conferenceId).then(function(currentRegistration){return currentRegistration})}],conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}]}}).when("/reviewRegistration/:conferenceId",{templateUrl:"views/60793fe3.60793fe3.reviewRegistration.html",controller:"ReviewRegistrationCtrl",resolve:{enforceAuth:$injector.get("enforceAuth"),registration:["$route","RegistrationCache",function($route,RegistrationCache){return RegistrationCache.getCurrent($route.current.params.conferenceId).then(function(currentRegistration){return currentRegistration})}],conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}]}}).when("/preview/:conferenceId/page/:pageId?",{templateUrl:"views/1eca431a.1eca431a.registration.html",controller:"RegistrationCtrl",resolve:{enforceAuth:$injector.get("enforceAuth"),conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}],currentRegistration:["$route","RegistrationCache",function($route,RegistrationCache){return RegistrationCache.getCurrent($route.current.params.conferenceId)}]}}).when("/eventDashboard",{templateUrl:"views/12fa2254.12fa2254.eventDashboard.html",controller:"eventDashboardCtrl",resolve:{enforceAuth:$injector.get("enforceAuth")}}).when("/eventOverview/:conferenceId",{templateUrl:"views/abde5d89.abde5d89.eventOverview.html",controller:"eventOverviewCtrl",resolve:{enforceAuth:$injector.get("enforceAuth"),registrations:["$route","RegistrationCache",function($route,RegistrationCache){return RegistrationCache.getAllForConference($route.current.params.conferenceId)}],conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}],permissions:["$route","PermissionCache",function($route,PermissionCache){return PermissionCache.getForConference($route.current.params.conferenceId)}]}}).when("/eventRegistrations/:conferenceId",{templateUrl:"views/36f3eb5e.36f3eb5e.eventRegistrations.html",controller:"eventRegistrationsCtrl",resolve:{enforceAuth:$injector.get("enforceAuth"),registrations:["$route","RegistrationCache",function($route,RegistrationCache){return RegistrationCache.getAllForConference($route.current.params.conferenceId)}],conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}],permissions:["$route","PermissionCache",function($route,PermissionCache){return PermissionCache.getForConference($route.current.params.conferenceId)}]}}).when("/eventForm/:conferenceId",{template:'<ng-include src="templateUrl"></ng-include>',controller:"eventFormCtrl",resolve:{enforceAuth:$injector.get("enforceAuth"),conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}],permissions:["$route","PermissionCache",function($route,PermissionCache){return PermissionCache.getForConference($route.current.params.conferenceId)}]}}).when("/eventDetails/:conferenceId",{template:'<ng-include src="templateUrl"></ng-include>',controller:"eventDetailsCtrl",resolve:{enforceAuth:$injector.get("enforceAuth"),conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}],permissions:["$route","PermissionCache",function($route,PermissionCache){return PermissionCache.getForConference($route.current.params.conferenceId)}]}}).when("/eventPermissions/:conferenceId",{template:'<ng-include src="templateUrl"></ng-include>',controller:"eventPermissionsCtrl",resolve:{enforceAuth:$injector.get("enforceAuth"),conference:["$route","ConfCache",function($route,ConfCache){return ConfCache.get($route.current.params.conferenceId)}],permissions:["$route","PermissionCache",function($route,PermissionCache){return PermissionCache.getForConference($route.current.params.conferenceId)}]}}).when("/activatePermission/:permissionAuthCode",{template:"{{message}}",controller:"ActiviatePermissionCtrl",resolve:{enforceAuth:$injector.get("enforceAuth")}}).when("/auth/:token",{resolve:{redirectToIntendedRoute:["$location","$cookies","$route","$rootScope","ProfileCache",function($location,$cookies,$route,$rootScope,ProfileCache){$cookies.crsAuthProviderType="",$cookies.crsToken&&$cookies.crsToken!==$route.current.params.token&&($cookies.crsPreviousToken=$cookies.crsToken),$cookies.crsToken=$route.current.params.token,$rootScope.crsToken=$cookies.crsToken,ProfileCache.getCache(function(data){$cookies.crsAuthProviderType=data.authProviderType,angular.isDefined($cookies.regType)?($location.path($cookies.intendedRoute||"/").search("regType",$cookies.regType),delete $cookies.regType):$location.path($cookies.intendedRoute||"/")})}]}}).when("/logout/",{resolve:{redirect:["$location","$cookies","$window","$http",function($location,$cookies,$window,$http){"RELAY"===$cookies.crsAuthProviderType?(delete $cookies.crsAuthProviderType,delete $cookies.crsPreviousToken,delete $cookies.crsToken,$window.location.href="https://signin.cru.org/cas/logout?service="+$location.absUrl()):"FACEBOOK"===$cookies.crsAuthProviderType&&$http.get("/auth/facebook/logout").success(function(data,status,headers){delete $cookies.crsAuthProviderType,delete $cookies.crsPreviousToken,delete $cookies.crsToken,$window.location.href=headers("fbLogoutUrl"),$location.path("/")}).error(function(data,status){alert("Logout failed: "+status)})}]}}).when("/help/",{templateUrl:"views/567b4d3b.567b4d3b.help.html",controller:"landingCtrl"}).when("/privacy/",{templateUrl:"views/773e33d5.773e33d5.privacy.html",controller:"landingCtrl"}).otherwise({redirectTo:"/"})}).run(function($rootScope,$cookies,$location){$rootScope.$on("$locationChangeStart",function(){_.contains($location.path(),"/preview/")?$rootScope.registerMode="preview":_.contains($location.path(),"/register/")&&($rootScope.registerMode="register")}),$rootScope.generateTitle=function(title){return title?title+" | Event Registration Tool":"Event Registration Tool"}}).config(function($httpProvider){$httpProvider.interceptors.push("currentRegistrationInterceptor"),$httpProvider.interceptors.push("httpUrlInterceptor"),$httpProvider.interceptors.push("authorizationInterceptor"),$httpProvider.interceptors.push("unauthorizedInterceptor"),$httpProvider.interceptors.push("debouncePutsInterceptor"),$httpProvider.interceptors.push("statusInterceptor")}).config(function($provide){$provide.decorator("$exceptionHandler",["$delegate",function($delegate){return function(exception){$delegate(exception);var error={type:"Angular",message:exception.message,params:{angularVersion:angular.version.full},component:exception.stack};Hoptoad.notify(error)}}])}),angular.module("confRegistrationWebApp").factory("currentRegistrationInterceptor",function($q,$injector){return{responseError:function(rejection){var regExp=/conferences\/[-a-zA-Z0-9]+\/registrations\/current\/?$/;if(404===rejection.status&&regExp.test(rejection.config.url)){var url=rejection.config.url.split("/");return _.isEmpty(_.last(url))&&url.pop(),url.pop(),$injector.get("$http").post(url.join("/"),{})}return $q.reject(rejection)}}}),angular.module("confRegistrationWebApp").factory("authorizationInterceptor",function($cookies){return{request:function(config){return config.headers.PreviousAuthorization=$cookies.crsPreviousToken,config.headers.Authorization=$cookies.crsToken,config.withCredentials=!0,config}}}),angular.module("confRegistrationWebApp").factory("unauthorizedInterceptor",function($q,$cookies){return{responseError:function(rejection){return _.contains([401,0],rejection.status)&&angular.isDefined($cookies.crsToken)&&(delete $cookies.crsToken,delete $cookies.crsPreviousToken,location.reload()),$q.reject(rejection)}}}),angular.module("confRegistrationWebApp").factory("statusInterceptor",function(){return{response:function(response){return _.isUndefined(response.data.statusCode)||(response.status=response.data.statusCode),response}}}),angular.module("confRegistrationWebApp").factory("debouncePutsInterceptor",function($timeout){var waitingRequests={},passThrough=function(config){var fn=function(){waitingRequests[config.url].holdRequests=!1};waitingRequests[config.url]={holdRequests:!0,timer:$timeout(fn,200)}},holdRequest=function(config){$timeout.cancel(waitingRequests[config.url].timer);var fn=function(){return waitingRequests[config.url].holdRequests=!1,config};return waitingRequests[config.url].timer=$timeout(fn,200),waitingRequests[config.url].timer};return{request:function(config){var deferredConfig;return"PUT"===config.method&&(waitingRequests[config.url]&&waitingRequests[config.url].holdRequests?deferredConfig=holdRequest(config):passThrough(config)),deferredConfig||config}}}),angular.module("confRegistrationWebApp").constant("uuid",function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0,v="x"==c?r:3&r|8;return v.toString(16)})}),angular.module("confRegistrationWebApp").factory("apiUrl",function($location,$rootScope){var host=$location.$$host;return _.contains(["localhost","stage.eventregistrationtool.com"],host)?($rootScope.environment="staging","https://api.stage.eventregistrationtool.com/eventhub-api/rest/"):($rootScope.environment="production","https://api.eventregistrationtool.com/eventhub-api/rest/")}),angular.module("confRegistrationWebApp").factory("httpUrlInterceptor",function(apiUrl){return{request:function(config){var passthroughRegexs=[/https?:\/\/.*/,/^views\/.*/,/template\/.*/],match=function(regexp){return regexp.test(config.url)};return _.any(passthroughRegexs,match)||(config.url=apiUrl+config.url),config}}}),angular.module("confRegistrationWebApp").service("GrowlService",function GrowlService($rootScope,$timeout){var growlScope,growlObject,growlName,growlTimeout;this.growl=function(scope,name,object,message){growlName=name,growlScope=scope,growlObject=angular.copy(object),$rootScope.growlMessage=message,$timeout.cancel(growlTimeout),growlTimeout=$timeout(function(){$rootScope.growlMessage=""},6e3)},$rootScope.growlUndo=function(){eval("growlScope."+growlName+" = growlObject;"),$rootScope.growlMessage="",$timeout.cancel(growlTimeout)}}),angular.module("confRegistrationWebApp").controller("eventDashboardCtrl",function($rootScope,$scope,ConfCache,RegistrationCache,$modal,$location,$http,Model,uuid){$rootScope.globalPage={type:"admin",mainClass:"dashboard",bodyClass:"",title:"My Dashboard",confId:0,footer:!0},$scope.$on("conferences/",function(event,conferences){$scope.conferences=conferences}),ConfCache.query(),$scope.$watch("showArchivedEvents",function(v){$scope.showArchivedEventsFilter=v?"":!1}),$scope.createEvent=function(){$modal.open({templateUrl:"views/modals/0c5b6712.0c5b6712.createEvent.html",controller:"createEventCtrl",resolve:{defaultValue:function(){return""}}}).result.then(function(conferenceName){null===conferenceName||""===conferenceName||angular.isUndefined(conferenceName)||ConfCache.create(conferenceName).then(function(conference){$location.path("/eventDetails/"+conference.id)})})},$scope.goToEventPage=function(page,eventId){var eventData=_.find($scope.conferences,{id:eventId});eventData.archived||$location.path("/"+page+"/"+eventId)},$scope.restoreEvent=function(eventId){var eventData=_.find($scope.conferences,{id:eventId});eventData.archived=!1,$http({method:"PUT",url:"conferences/"+eventId,data:eventData}).success(function(){ConfCache.empty()}).error(function(data){alert("Error: "+data),eventData.archived=!0})},$scope.cloneEvent=function(conferenceToCloneId){var conferenceToClone=_.find($scope.conferences,{id:conferenceToCloneId});$modal.open({templateUrl:"views/modals/1362b23c.1362b23c.cloneEvent.html",controller:"createEventCtrl",resolve:{defaultValue:function(){return conferenceToClone.name+" (clone)"}}}).result.then(function(conferenceName){null===conferenceName||""===conferenceName||angular.isUndefined(conferenceName)||ConfCache.create(conferenceName).then(function(conference){var conferenceOrig=conference;$http.get("conferences/"+conferenceToClone.id).success(function(result){conference=angular.copy(result),conference.contactUser=conferenceOrig.contactUser,conference.id=conferenceOrig.id,conference.name=conferenceName,conference.registrationPages=result.registrationPages;for(var i=0;i<conference.registrationPages.length;i++){var pageUuid=uuid();conference.registrationPages[i].id=pageUuid,conference.registrationPages[i].conferenceId=conference.id;for(var j=0;j<conference.registrationPages[i].blocks.length;j++)conference.registrationPages[i].blocks[j].id=uuid(),conference.registrationPages[i].blocks[j].pageId=pageUuid}for(conference.registrantTypes=result.registrantTypes,i=0;i<conference.registrantTypes.length;i++)conference.registrantTypes[i].id=uuid(),conference.registrantTypes[i].conferenceId=conference.id;Model.update("conferences/"+conference.id,conference,function(){$location.path("/eventDetails/"+conference.id)})})})})}}),angular.module("confRegistrationWebApp").controller("RegistrationCtrl",function($scope,$rootScope,$sce,$routeParams,$location,RegistrationCache,conference,currentRegistration,validateRegistrant){function getPageById(pageId){for(var pages=conference.registrationPages,i=0;i<pages.length;i++)if(angular.equals(pageId,pages[i].id))return pages[i]}function getPageAfterById(pageId){for(var pages=$scope.conference.registrationPages,i=0;i<pages.length;i++)if(angular.equals(pageId,pages[i].id))return pages[i+1]}if($rootScope.globalPage={type:"registration",mainClass:"front-form",bodyClass:"frontend",title:conference.name,confId:conference.id,footer:!1},$scope.validPages={},$scope.$on("pageValid",function(event,validity){event.stopPropagation(),$scope.validPages[event.targetScope.page.id]=validity,$scope.registrationComplete=_.filter($scope.validPages).length===$scope.conference.registrationPages.length}),$scope.conference=angular.copy(conference),$scope.currentRegistration=currentRegistration,$scope.currentRegistrant=$routeParams.reg,angular.isDefined($routeParams.reg)){var reg=_.find(currentRegistration.registrants,{id:$routeParams.reg});if(angular.isUndefined(reg))return void $location.path($rootScope.registerMode+"/"+$scope.conference.id+"/page/").search("reg",null);angular.forEach($scope.conference.registrationPages,function(page){var pageIndex=_.findIndex($scope.conference.registrationPages,{id:page.id});angular.forEach(page.blocks,function(block){_.contains(block.registrantTypes,reg.registrantTypeId)&&_.remove($scope.conference.registrationPages[pageIndex].blocks,function(b){return b.id===block.id})}),0===page.blocks.length&&_.remove($scope.conference.registrationPages,function(p){return p.id===page.id})})}var pageId=$routeParams.pageId;$scope.activePageId=pageId||"",$scope.page=getPageById(pageId),$scope.activePageIndex=_.findIndex(conference.registrationPages,{id:pageId}),$scope.nextPage=getPageAfterById(pageId),$scope.validateAndGoToNext=function(isValid){isValid?$location.path(angular.isDefined($scope.nextPage)?"/"+$rootScope.registerMode+"/"+conference.id+"/page/"+$scope.nextPage.id:"/reviewRegistration/"+conference.id):$scope.notify={"class":"alert-danger",message:$sce.trustAsHtml("Please fill in all required fields.")},window.scrollTo(0,0)},$scope.previousPage=function(){var previousPage=conference.registrationPages[$scope.activePageIndex-1];angular.isDefined(previousPage)&&$location.path("/"+$rootScope.registerMode+"/"+conference.id+"/page/"+previousPage.id),$location.path("/"+$rootScope.registerMode+"/"+conference.id+"/page/")},$scope.registrantName=function(r){var returnStr,nameBlock=_.find(_.flatten(conference.registrationPages,"blocks"),{profileType:"NAME"}).id,registrant=_.find(currentRegistration.registrants,{id:r.id});return nameBlock=_.find(registrant.answers,{blockId:nameBlock}),angular.isDefined(nameBlock)&&(nameBlock=nameBlock.value,angular.isDefined(nameBlock.firstName)&&(returnStr=nameBlock.firstName+" "+(nameBlock.lastName||""))),returnStr||_.find(conference.registrantTypes,{id:r.registrantTypeId}).name},$scope.registrantIsComplete=function(registrantId){var invalidBlocks=validateRegistrant.validate(conference,_.find(currentRegistration.registrants,{id:registrantId}));return 0===invalidBlocks.length}}),angular.module("confRegistrationWebApp").directive("page",function(){return{templateUrl:"views/components/312f11be.312f11be.pageDirective.html",restrict:"E",controller:function($scope,$location){$scope.wizard=-1!==$location.path().indexOf("eventForm"),$scope.$watch("pageForm.$valid",function(valid){$scope.$emit("pageValid",valid)})}}}),angular.module("confRegistrationWebApp").directive("crsBlock",function(){return{templateUrl:"views/components/17a35e3a.17a35e3a.blockDirective.html",restrict:"A",controller:function($scope,$routeParams,AnswerCache,RegistrationCache,uuid){if(!$scope.wizard)if(angular.isDefined($scope.adminEditRegistration)){var answerForThisBlock=_.where($scope.adminEditRegistration.answers,{blockId:$scope.block.id});answerForThisBlock.length>0&&($scope.answer=answerForThisBlock[0]),angular.isUndefined($scope.answer)&&($scope.answer={id:uuid(),registrantId:$scope.adminEditRegistration.id,blockId:$scope.block.id,value:"checkboxQuestion"===$scope.block.type?{}:""},$scope.adminEditRegistration.answers.push($scope.answer))}else RegistrationCache.getCurrent($scope.conference.id).then(function(currentRegistration){var registrantId=$routeParams.reg;if(!angular.isUndefined(registrantId)&&!angular.isUndefined($scope.block)){var registrantIndex=_.findIndex(currentRegistration.registrants,{id:registrantId}),answerForThisBlock=_.where(currentRegistration.registrants[registrantIndex].answers,{blockId:$scope.block.id});answerForThisBlock.length>0&&($scope.answer=answerForThisBlock[0]),angular.isUndefined($scope.answer)&&($scope.answer={id:uuid(),registrantId:registrantId,blockId:$scope.block.id,value:"checkboxQuestion"===$scope.block.type?{}:""},currentRegistration.registrants[registrantIndex].answers.push($scope.answer))}}),AnswerCache.syncBlock($scope,"answer");if($scope.editBlockAddOption=function(newOption){angular.isUndefined($scope.this.block.content.choices)&&($scope.this.block.content={choices:[]}),$.inArray(newOption,$scope.this.block.content.choices)>=0||$scope.this.block.content.choices.push(newOption)},$scope.editBlockDeleteOption=function(index){$scope.this.block.content.choices.splice(index,1)},$scope.wizard){$scope.activeTab="options",$scope.visibleRegTypes={},angular.forEach($scope.conference.registrantTypes,function(type){$scope.visibleRegTypes[type.id]=!_.contains($scope.block.registrantTypes,type.id)}),$scope.$watch("visibleRegTypes",function(object){angular.isDefined(object)&&($scope.block.registrantTypes=[],angular.forEach(object,function(v,k){v||$scope.block.registrantTypes.push(k)}))},!0);var typeToProfile=[];typeToProfile.phoneQuestion="PHONE",typeToProfile.addressQuestion="ADDRESS",typeToProfile.genderQuestion="GENDER",typeToProfile.yearInSchoolQuestion="YEAR_IN_SCHOOL",$scope.this.profileCheck=!_.isNull($scope.this.block.profileType),$scope.this.profileOption=_.has(typeToProfile,$scope.this.block.type),$scope.this.requiredOption=!_.contains(["paragraphContent"],$scope.this.block.type),$scope.this.canDelete=!_.contains(["NAME","EMAIL"],$scope.this.block.profileType),$scope.this.hasOptions=_.contains(["radioQuestion","checkboxQuestion","selectQuestion"],$scope.this.block.type)}$scope.toggleProfileType=function(value){if(value){$scope.this.block.profileType=typeToProfile[$scope.this.block.type];var profileCount=0;$scope.conference.registrationPages.forEach(function(page){page.blocks.forEach(function(block){$scope.this.block.profileType===block.profileType&&profileCount++})}),profileCount>1&&(alert("Only one "+$scope.this.block.profileType.charAt(0).toUpperCase()+$scope.this.block.profileType.slice(1).toLowerCase()+" profile block can be used per form."),$scope.this.block.profileType=null,$scope.this.profileCheck=!1)}else $scope.this.block.profileType=null}}}}),angular.module("confRegistrationWebApp").controller("editRegistrationModalCtrl",function($scope,$modalInstance,$http,registrant,conference){$scope.conference=conference,$scope.adminEditRegistration=angular.copy(registrant),$scope.saving=!1,$scope.close=function(){$modalInstance.close()},$scope.submit=function(){$scope.saving=!0,angular.forEach($scope.adminEditRegistration.answers,function(a){angular.equals(a,_.find(registrant.answers,{id:a.id}))||$http.put("answers/"+a.id,a)}),$modalInstance.close($scope.adminEditRegistration)}}),angular.module("confRegistrationWebApp").controller("eventRegistrationsCtrl",function($rootScope,$scope,$modal,$http,apiUrl,uuid,registrations,conference,RegViewCache,RegistrationsViewService,U,PaymentsViewService,permissions){$rootScope.globalPage={type:"admin",mainClass:"registrations",bodyClass:"",title:conference.name,confId:conference.id,footer:!0},$scope.conference=conference,$scope.blocks=[],$scope.reversesort=!1,$scope.showAllViewId="all",$scope.defaultViewId="default",$scope.activeRegViewId=$scope.defaultViewId,$scope.savedState="",$scope.showRegistrationsCompleted=!0,$scope.columnsDropdownToggle=!1,$scope.registrations=registrations,$scope.registrants=_.flatten(registrations,"registrants"),angular.forEach(conference.registrationPages,function(page){angular.forEach(page.blocks,function(block){-1===block.type.indexOf("Content")&&$scope.blocks.push(angular.copy(block))})}),$scope.toggleColumn=function(block){$scope.blocks[block].visible=!$scope.blocks[block].visible,$scope.updateRegView()},$scope.setRegView=function(){if($scope.savedState="",""===$scope.activeRegViewId);else{var visibleBlocks=_.find($scope.registrationViewsDropdown,{id:$scope.activeRegViewId}).visibleBlockIds;angular.forEach($scope.blocks,function(block){-1!==visibleBlocks.indexOf(block.id)?block.visible=!0:-1===block.type.indexOf("Content")&&(block.visible=!1)})}},$scope.createRegView=function(){$modal.open({templateUrl:"views/modals/ba513213.ba513213.regViewCreate.html",controller:"createEventCtrl",resolve:{defaultValue:function(){return""}}}).result.then(function(viewName){if(""!==viewName){var regViewNames=_.pluck($scope.registrationViewsDropdown,"name");if(regViewNames.indexOf(viewName)>-1){var errorModalOptions={templateUrl:"views/modals/dc0a9a58.dc0a9a58.errorModal.html",controller:"genericModal",resolve:{message:function(){return'View name "'+viewName+'" already exists. Please provide a different view name.'}}};return void $modal.open(errorModalOptions)}var newView={id:uuid(),conferenceId:conference.id,name:viewName,visibleBlockIds:_.pluck(_.filter($scope.blocks,function(item){return item.visible===!0}),"id")};$http({method:"POST",url:"conferences/"+conference.id+"/registration-views",data:newView}).success(function(){$scope.registrationViews=$scope.registrationViews.concat(newView),$scope.registrationViewsDropdown=$scope.registrationViewsDropdown.concat(newView),$scope.activeRegViewId=newView.id}).error(function(){})}})},$scope.updateRegView=function(){if(!$scope.isPredefinedView($scope.activeRegViewId)){var thisView={id:$scope.activeRegViewId,conferenceId:conference.id,name:_.find($scope.registrationViewsDropdown,{id:$scope.activeRegViewId}).name,visibleBlockIds:_.pluck(_.filter($scope.blocks,function(item){return item.visible===!0}),"id")};$scope.savedState="Saving...",$http({method:"PUT",url:"registration-views/"+$scope.activeRegViewId,data:thisView}).success(function(){$scope.registrationViews=_.remove($scope.registrationViews,function(view){return view.id!==$scope.activeRegViewId}),$scope.registrationViewsDropdown=_.remove($scope.registrationViewsDropdown,function(view){return view.id!==$scope.activeRegViewId}),$scope.registrationViews=$scope.registrationViews.concat(thisView),$scope.registrationViewsDropdown=$scope.registrationViewsDropdown.concat(thisView),$scope.activeRegViewId=thisView.id,$scope.savedState="Saved",RegViewCache.update(conference.id,$scope.registrationViews)}).error(function(){})}},$scope.delRegView=function(){$scope.isPredefinedView($scope.activeRegViewId)||$http({method:"DELETE",url:"registration-views/"+$scope.activeRegViewId}).success(function(){$scope.registrationViews=_.remove($scope.registrationViews,function(view){return view.id!==$scope.activeRegViewId}),$scope.registrationViewsDropdown=_.remove($scope.registrationViewsDropdown,function(view){return view.id!==$scope.activeRegViewId}),$scope.activeRegViewId=$scope.defaultViewId,$scope.setRegView(),RegViewCache.update(conference.id,$scope.registrationViews)}).error(function(){})},RegViewCache.get(conference.id,function(data){$scope.registrationViews=_.sortBy(data,"name");var profileBlocks=function(blocks){return _.filter(blocks,function(block){var profileTypes=["EMAIL","NAME"];return profileTypes.indexOf(block.profileType)>-1})};$scope.registrationViewsDropdown=[{id:$scope.defaultViewId,name:"-Name & Email-",visibleBlockIds:_.pluck(profileBlocks($scope.blocks),"id")},{id:$scope.showAllViewId,name:"-Show All-",visibleBlockIds:_.pluck($scope.blocks,"id")}],$scope.registrationViewsDropdown=$scope.registrationViewsDropdown.concat($scope.registrationViews),$scope.setRegView()}),$scope.findAnswer=function(registration,blockId){return _.find(registration.answers,function(answer){return angular.equals(answer.blockId,blockId)})},$scope.getSelectedCheckboxes=function(choices){return _.keys(_.pick(choices,function(val){return val===!0}))},$scope.answerSort=function(registration){return angular.isDefined($scope.order)?angular.isDefined($scope.findAnswer(registration,$scope.order))?$scope.findAnswer(registration,$scope.order).value?$scope.findAnswer(registration,$scope.order).value:$scope.getSelectedCheckboxes($scope.findAnswer(registration,$scope.order).value).length>0?$scope.getSelectedCheckboxes($scope.findAnswer(registration,$scope.order).value).join(" "):"object"==typeof $scope.findAnswer(registration,$scope.order).value?_.values($scope.findAnswer(registration,$scope.order).value).join(" "):$scope.findAnswer(registration,$scope.order).value:void 0:0},$scope.setOrder=function(order){$scope.reversesort=order===$scope.order?!$scope.reversesort:!1,$scope.order=order},$scope.viewPayments=function(registrationId){var paymentModalOptions={templateUrl:"views/modals/0209c27e.0209c27e.paymentsModal.html",controller:"paymentModal",backdrop:"static",resolve:{registration:function(){return _.find(registrations,{id:registrationId})},conference:function(){return conference}}};$modal.open(paymentModalOptions).result.then(function(updatedRegistration){var localUpdatedRegistrationIndex=_.findIndex($scope.registrations,{id:updatedRegistration.id});$scope.registrations[localUpdatedRegistrationIndex]=updatedRegistration})},$scope.isPredefinedView=function(regViewId){var predefinedViews=[$scope.showAllViewId,$scope.defaultViewId];return predefinedViews.indexOf(regViewId)>-1},$scope.paymentCategories=[{name:"Show All",matches:function(){return!0}},{name:"Full/Overpaid",matches:function(x,y){return x>=y}},{name:"Partial",matches:function(x,y){return x>0&&y>x}},{name:"Full/Partial",matches:function(x){return x>0}},{name:"Not Paid",matches:function(x){return null===x?!0:0>=x}},{name:"Overpaid",matches:function(x,y){return x>y}}],$scope.currentPaymentCategory=_.first($scope.paymentCategories).name,$scope.paymentStatus=function(registrant){var registration=_.find(registrations,{id:registrant.registrationId}),paymentCategory=_.find($scope.paymentCategories,{name:$scope.currentPaymentCategory});return paymentCategory.matches(registration.totalPaid,registration.calculatedTotalDue)},$scope.completeStatus=function(registrant){var registration=_.find(registrations,{id:registrant.registrationId});return $scope.showRegistrationsCompleted?registration.completed:!0},$scope.paidInFull=function(registrantId){var registration=_.find(registrations,{id:registrantId});return registration.totalPaid>=registration.calculatedTotalDue};var expandedRegistrations=[];$scope.expandRegistration=function(r){_.contains(expandedRegistrations,r)?_.remove(expandedRegistrations,function(i){return i===r}):expandedRegistrations.push(r)},$scope.isExpanded=function(r){return _.contains(expandedRegistrations,r)},$scope.editRegistrant=function(r){var editRegistrationDialogOptions={templateUrl:"views/modals/f7552284.f7552284.editRegistration.html",controller:"editRegistrationModalCtrl",resolve:{registrant:function(){return r},conference:function(){return conference}}};$modal.open(editRegistrationDialogOptions).result.then(function(result){if(angular.isDefined(result)){var index=_.findIndex($scope.registrants,{id:result.id});$scope.registrants[index]=result}})},$scope.exportRegistrations=function(){var table=RegistrationsViewService.getTable(conference,registrations,$scope.showRegistrationsCompleted),csvContent=U.stringifyArray(table,","),url=apiUrl+"services/download/registrations/"+conference.name+"-registrations.csv";U.submitForm(url,{name:csvContent})},$scope.exportPayments=function(){var table=PaymentsViewService.getTable(conference,registrations),csvContent=U.stringifyArray(table,","),url=apiUrl+"services/download/payments/"+conference.name+"-payments.csv";U.submitForm(url,{name:csvContent})},$scope.eventHasCost=function(){return _.max(_.flatten(conference.registrantTypes,"cost"))>0},$scope.registerUser=function(){var registrationModalOptions={templateUrl:"views/modals/6cdc3338.6cdc3338.manualRegistration.html",controller:"registrationModal",resolve:{conference:function(){return conference}}};$modal.open(registrationModalOptions)},$scope.allowDeleteRegistration=function(){return permissions.permissionInt>1},$scope.getRegistration=function(id){return _.find(registrations,{id:id})},$scope.getRegistrantType=function(id){return _.find(conference.registrantTypes,{id:id})},$scope.deleteRegistrant=function(registrant){var modalInstance=$modal.open({templateUrl:"views/modals/7d123415.7d123415.deleteRegistration.html",controller:"deleteRegistrationCtrl"});modalInstance.result.then(function(doDelete){if(doDelete){var registration=_.find(registrations,{id:registrant.registrationId}),url="registrations/"+registration.id;registration.registrants.length>1&&(url="registrants/"+registrant.id),$http({method:"DELETE",url:url}).success(function(){_.remove($scope.registrants,function(r){return r.id===registrant.id})})}})}}),angular.module("confRegistrationWebApp").controller("landingCtrl",function($rootScope){$rootScope.globalPage={type:"landing","class":"dashboard",title:"",confId:0,footer:!0}}),angular.module("confRegistrationWebApp").controller("eventDetailsCtrl",function($rootScope,$scope,$http,$sce,$timeout,$window,conference,ConfCache,permissions,permissionConstants,uuid){$rootScope.globalPage={type:"admin",mainClass:"conference-details",bodyClass:"",title:conference.name,confId:conference.id,footer:!0},$scope.templateUrl=permissions.permissionInt>=permissionConstants.UPDATE?"views/540b13b1.540b13b1.eventDetails.html":"views/2c2a6d65.2c2a6d65.permissionError.html",$scope.tabs=[{id:"eventInfo",name:"Event Information",view:"views/eventDetails/763e9848.763e9848.eventInformation.html"},{id:"regOptions",name:"Registration Options",view:"views/eventDetails/fa36f06a.fa36f06a.regOptions.html"},{id:"regTypes",name:"Registration Types",view:"views/eventDetails/00e05983.00e05983.regTypes.html"},{id:"paymentOptions",name:"Payment Options",view:"views/eventDetails/b6d930b3.b6d930b3.paymentOptions.html"},{id:"contactInfo",name:"Contact Information",view:"views/eventDetails/94bb7c26.94bb7c26.contactInfo.html"}],$scope.changeTab=function(tab){$scope.activeTab=tab
},$scope.changeTab($scope.tabs[0]),$scope.paymentGateways=[{id:"AUTHORIZE_NET",name:"Authorize.Net"},{id:"TRUST_COMMERCE",name:"TrustCommerce"}],$scope.conference=conference,$scope.addRegType=function(){$scope.conference.registrantTypes.push({id:uuid(),cost:0,earlyRegistrationCutoff:moment().add(7,"days").format("YYYY-MM-DD HH:mm:ss")})},$scope.deleteRegType=function(id){$scope.conference.registrantTypes.length>1?_.remove($scope.conference.registrantTypes,function(type){return type.id===id}):($scope.notify={"class":"alert-danger",message:$sce.trustAsHtml("You must have at least one registration type per event.")},$timeout(function(){$scope.notify={}},3500))},$scope.saveEvent=function(){var validationErrors=[];if(_.isEmpty($scope.conference.name)&&validationErrors.push("Please enter an event name."),$scope.conference.eventStartTime>$scope.conference.eventEndTime&&validationErrors.push("Event end date/time must be after event start date/time."),$scope.conference.registrationStartTime>$scope.conference.registrationEndTime&&validationErrors.push("Registration end date/time must be after registration start date/time."),$scope.conference.acceptCreditCards&&_.isEmpty($scope.conference.paymentGatewayId)&&validationErrors.push("Please enter a merchant account ID."),angular.forEach($scope.conference.registrantTypes,function(t){_.isEmpty(t.name)&&validationErrors.push("Please enter a name for all registration types.")}),angular.forEach($scope.conference.registrantTypes,function(t){t.cost=Number(t.cost),t.cost<0&&validationErrors.push("Event cost for '"+t.name+"' must be a positive number.")}),angular.forEach($scope.conference.registrantTypes,function(t){$scope.conference.requireLogin&&$scope.conference.acceptCreditCards&&String(t.minimumDeposit).length>0&&!_.isNull(t.minimumDeposit)?(t.minimumDeposit=Number(t.minimumDeposit),t.minimumDeposit>t.cost&&validationErrors.push("The minimum deposit for '"+t.name+"' must be less than the cost.")):t.minimumDeposit=null}),angular.forEach($scope.conference.registrantTypes,function(t){t.earlyRegistrationDiscount&&(t.earlyRegistrationAmount=Number(t.earlyRegistrationAmount),t.earlyRegistrationAmount>t.cost&&validationErrors.push("The early registration discount for '"+t.name+"' must be less than the cost."),t.earlyRegistrationAmount<0&&validationErrors.push("The early registration discount for '"+t.name+"' must be a positive number."))}),$window.scrollTo(0,0),validationErrors.length>0){var errorMsg="<strong>Error!</strong> Please fix the following issues:<ul>";angular.forEach(validationErrors,function(e){errorMsg=errorMsg+"<li>"+e+"</li>"}),errorMsg+="</ul>",$scope.notify={"class":"alert-danger",message:$sce.trustAsHtml(errorMsg)}}else $scope.notify={"class":"alert-warning",message:$sce.trustAsHtml("Saving...")},$http({method:"PUT",url:"conferences/"+conference.id,data:$scope.conference}).success(function(){$scope.notify={"class":"alert-success",message:$sce.trustAsHtml("<strong>Saved!</strong> Your event details have been updated.")},ConfCache.empty()}).error(function(data){window.scrollTo(0,0),$scope.notify={"class":"alert-danger",message:$sce.trustAsHtml("<strong>Error</strong> "+data)}})}}),angular.module("confRegistrationWebApp").controller("eventOverviewCtrl",function($rootScope,$scope,$location,$route,ConfCache,conference){$rootScope.globalPage={type:"admin",mainClass:"conference-details",bodyClass:"",title:conference.name,confId:conference.id,footer:!0},$scope.conference=conference;var port="";80!==$location.$$port&&443!==$location.$$port&&(port=":"+$location.$$port);var baseUrl=$location.$$protocol+"://"+$location.$$host+port+"/#/register/"+conference.id;$scope.registrationUrl={},$scope.registrationUrl[0]=baseUrl,angular.forEach(conference.registrantTypes,function(t){$scope.registrationUrl[t.id]=baseUrl+"?regType="+t.id})}),angular.module("confRegistrationWebApp").controller("ReviewRegistrationCtrl",function($scope,$rootScope,$location,$route,$modal,$http,registration,conference,RegistrationCache,validateRegistrant){$rootScope.globalPage={type:"registration",mainClass:"front-form",bodyClass:"frontend",title:conference.name,confId:conference.id,footer:!1},0===registration.registrants.length&&$location.path("/"+($rootScope.registerMode||"register")+"/"+conference.id+"/page/"),$scope.conference=conference,$scope.currentRegistration=registration,$scope.blocks=[],$scope.regValidate=[],angular.isDefined($rootScope.currentPayment)?$rootScope.currentPayment.amount=registration.calculatedTotalDue:$rootScope.currentPayment={amount:0},angular.forEach(_.flatten(conference.registrationPages,"blocks"),function(block){-1===block.type.indexOf("Content")&&$scope.blocks.push(block)}),angular.forEach(registration.registrants,function(r){$scope.regValidate[r.id]=validateRegistrant.validate(conference,r)}),$scope.findAnswer=function(blockId){return _.find($scope.answers,{blockId:blockId})},$scope.confirmRegistration=function(){return jQuery(".confirm-registration").attr("value","Loading..."),void setRegistrationAsCompleted()};var setRegistrationAsCompleted=function(){window.scrollTo(0,0),registration.completed=!0,RegistrationCache.update("registrations/"+registration.id,registration,function(){$scope.currentRegistration.completed=!0,RegistrationCache.emptyCache()},function(){$scope.currentRegistration.completed=!1,alert("An error occurred while submitting your registration.")})};$scope.editRegistrant=function(id){$location.path("/"+($rootScope.registerMode||"register")+"/"+conference.id+"/page/"+conference.registrationPages[0].id).search("reg",id)},$scope.removeRegistrant=function(id){_.remove($scope.currentRegistration.registrants,function(r){return r.id===id}),RegistrationCache.update("registrations/"+$scope.currentRegistration.id,$scope.currentRegistration,function(){RegistrationCache.emptyCache(),$route.reload()})},$scope.editPayment=function(){$location.path("/payment/"+conference.id)},$scope.getRegistrantType=function(id){return _.find(conference.registrantTypes,{id:id})},$scope.isBlockInvalid=function(rId,bId){return _.contains($scope.regValidate[rId],bId)},$scope.allRegistrantsValid=function(){var returnVal=!0;return angular.forEach(registration.registrants,function(r){angular.isUndefined($scope.regValidate[r.id])?returnVal=!1:$scope.regValidate[r.id].length&&(returnVal=!1)}),returnVal},$scope.registrantName=function(r){var returnStr,nameBlock=_.find(_.flatten(conference.registrationPages,"blocks"),{profileType:"NAME"}).id,registrant=_.find(registration.registrants,{id:r.id});return nameBlock=_.find(registrant.answers,{blockId:nameBlock}),angular.isDefined(nameBlock)&&(nameBlock=nameBlock.value,angular.isDefined(nameBlock.firstName)&&(returnStr=nameBlock.firstName+" "+(nameBlock.lastName||""))),returnStr||_.find(conference.registrantTypes,{id:r.registrantTypeId}).name},$scope.blockInRegType=function(block,regTypeId){return!_.contains(block.registrantTypes,regTypeId)}}),angular.module("confRegistrationWebApp").directive("formElements",function(){return{restrict:"A",link:function(scope){var newDragBlock="";window.setTimeout(function(){jQuery(".connectedSortable").sortable({connectWith:".connectedSortable",stop:function(event,ui){""!==newDragBlock?(scope.insertBlock(newDragBlock,ui.item.parent().attr("id"),ui.item.index(),ui.item.attr("default-title"),ui.item.attr("default-profile")),ui.item.remove()):(scope.moveBlock(ui.item.find(".crsQuestion").attr("id"),ui.item.parent().attr("id"),ui.item.index()),ui.item.remove(),scope.$apply())}}),jQuery(".page-form").sortable({stop:function(event,ui){scope.movePage(ui.item.attr("data-page-id"),ui.item.index())}}),jQuery(".crsFormElements li").draggable({connectToSortable:".connectedSortable",helper:"clone",revert:"invalid",start:function(){newDragBlock=$(this).attr("id")},stop:function(){newDragBlock="",formElementsScroll()}}).disableSelection();var formElementsScroll=function(){var yOffset=jQuery(window).scrollTop(),elementlist=jQuery(".waypoint1").offset().top,windowHeight=jQuery(window).height(),crsFormElementsHeight=jQuery(".elements-list").height()+60,footerHeight=0,remainingDocToScroll=jQuery(document).height()-(yOffset+jQuery(window).height())-footerHeight;yOffset-elementlist>0&&windowHeight+remainingDocToScroll>crsFormElementsHeight&&windowHeight>crsFormElementsHeight?(jQuery(".elements-list, .functions-header").css("position","fixed"),jQuery(".form-page").css("margin-top",jQuery(".functions-header").css("height"))):(jQuery(".elements-list, .functions-header").css("position","relative"),jQuery(".form-page").css("margin-top","0"))};jQuery(window).scroll(function(){return jQuery(".waypoint1").length?void formElementsScroll():void jQuery(window).unbind("scroll")}),jQuery(window).resize(function(){return jQuery(".waypoint1").length?void formElementsScroll():void jQuery(window).unbind("resize")})},500)}}}),angular.module("confRegistrationWebApp").directive("registrationTypeSelect",function(){return{templateUrl:"views/components/4d4a643b.4d4a643b.registrationTypeSelect.html",restrict:"E",controller:function($scope,$rootScope,$location,$routeParams,RegistrationCache,uuid){$scope.visibleRegistrantTypes=angular.copy($scope.conference.registrantTypes);var visibleType=$routeParams.regType;angular.isDefined(visibleType)?_.remove($scope.visibleRegistrantTypes,function(t){return t.id!==visibleType}):_.remove($scope.visibleRegistrantTypes,function(t){return t.hidden}),$scope.newRegistrant=function(type){var newId=uuid();$scope.currentRegistration.registrants.push({id:newId,registrationId:$scope.currentRegistration.id,registrantTypeId:type,answers:[]}),RegistrationCache.update("registrations/"+$scope.currentRegistration.id,$scope.currentRegistration,function(){RegistrationCache.emptyCache(),$location.path(($rootScope.registerMode||"register")+"/"+$scope.conference.id+"/page/"+$scope.conference.registrationPages[0].id).search("reg",newId)})},$scope.isConferenceCost=function(){return _.max(_.flatten($scope.conference.registrantTypes,"cost"))>0}}}}),angular.module("confRegistrationWebApp").controller("eventFormCtrl",function($rootScope,$scope,$modal,$location,$sce,$http,$timeout,conference,GrowlService,ConfCache,uuid,permissions,permissionConstants){$rootScope.globalPage={type:"admin",mainClass:"form-builder",bodyClass:"small-footer",title:conference.name,confId:conference.id,footer:!0},$scope.templateUrl=permissions.permissionInt>=permissionConstants.UPDATE?"views/cad00181.cad00181.eventForm.html":"views/2c2a6d65.2c2a6d65.permissionError.html",$scope.conference=conference,$scope.$watch("conference",function(newObject,oldObject){angular.isDefined(newObject)&&angular.isDefined(oldObject)&&(_.isEqual(newObject,oldObject)||saveForm())},!0);var formSavingTimeout,formSavingNotifyTimeout,formSaving=!1,saveForm=function(){return formSaving?($timeout.cancel(formSavingTimeout),void(formSavingTimeout=$timeout(function(){saveForm()},600))):($timeout.cancel(formSavingTimeout),formSaving=!0,void $http({method:"PUT",url:"conferences/"+conference.id,data:$scope.conference}).success(function(){formSaving=!1,$scope.notify={"class":"alert-success",message:$sce.trustAsHtml("<strong>Saved!</strong> Your form has been saved.")},angular.isDefined($scope.conference)&&ConfCache.update(conference.id,$scope.conference),$timeout.cancel(formSavingNotifyTimeout),formSavingNotifyTimeout=$timeout(function(){$scope.notify={}},2e3)}).error(function(data){formSaving=!1,$scope.notify={"class":"alert-danger",message:$sce.trustAsHtml("<strong>Error</strong> "+data)}}))};$scope.previewForm=function(){$location.path("/preview/"+conference.id+"/page/")},$scope.deletePage=function(pageId,growl){var delPageIndex=_.findIndex($scope.conference.registrationPages,{id:pageId});if($scope.conference.registrationPages[delPageIndex].blocks.length>0)return void $modal.open({templateUrl:"views/modals/dc0a9a58.dc0a9a58.errorModal.html",controller:"genericModal",resolve:{data:function(){return"Please remove all questions from page before deleting."}}});if(growl){var page=_.find($scope.conference.registrationPages,{id:pageId}),message='Page "'+page.title+'" has been deleted.';GrowlService.growl($scope,"conference",$scope.conference,message)}$scope.conference.registrationPages.splice(delPageIndex,1)};var makePositionArray=function(){var tempPositionArray=[];return $scope.conference.registrationPages.forEach(function(page,pageIndex){page.blocks.forEach(function(block,blockIndex){tempPositionArray[block.id]={page:pageIndex,block:blockIndex}})}),tempPositionArray};$scope.moveBlock=function(blockId,newPage,newPosition){var tempPositionArray=makePositionArray(),newPageIndex=_.findIndex($scope.conference.registrationPages,{id:newPage}),origPageIndex=tempPositionArray[blockId].page,origBlock=angular.copy($scope.conference.registrationPages[origPageIndex].blocks[tempPositionArray[blockId].block]);origBlock.pageId=newPage,deleteBlockFromPage(blockId),$scope.conference.registrationPages[newPageIndex].blocks.splice(newPosition,0,origBlock)},$scope.copyBlock=function(blockId){var tempPositionArray=makePositionArray(),origPageIndex=tempPositionArray[blockId].page,newBlock=angular.copy($scope.conference.registrationPages[origPageIndex].blocks[tempPositionArray[blockId].block]),newPosition=tempPositionArray[blockId].block+1;newBlock.id=uuid(),newBlock.profileType=null,newBlock.position=newPosition,newBlock.title=newBlock.title+" (copy)",$scope.conference.registrationPages[origPageIndex].blocks.splice(newPosition,0,newBlock)},$scope.insertBlock=function(blockType,newPage,newPosition,title,defaultProfile){var newPageIndex=_.findIndex($scope.conference.registrationPages,{id:newPage}),profileType=null;if(angular.isDefined(defaultProfile)){var profileCount=0;$scope.conference.registrationPages.forEach(function(page){page.blocks.forEach(function(block){defaultProfile===block.profileType&&profileCount++})}),0===profileCount&&(profileType=defaultProfile)}var newBlock={id:uuid(),content:"",pageId:newPage,required:!1,title:title,type:blockType,profileType:profileType};$scope.$apply(function(){$scope.conference.registrationPages[newPageIndex].blocks.splice(newPosition,0,newBlock)})},$scope.deleteBlock=function(blockId,growl){if(growl){var t=makePositionArray(),block=$scope.conference.registrationPages[t[blockId].page].blocks[t[blockId].block],message='"'+block.title+'" has been deleted.';GrowlService.growl($scope,"conference",$scope.conference,message)}deleteBlockFromPage(blockId)};var deleteBlockFromPage=function(blockId){var tempPositionArray=makePositionArray();_.remove($scope.conference.registrationPages[tempPositionArray[blockId].page].blocks,function(b){return b.id===blockId})};$scope.addNewPage=function(){$modal.open({templateUrl:"views/modals/b283bffc.b283bffc.promptNewPage.html",controller:"confirmPromptCtrl"}).result.then(function(pageTitle){null===pageTitle||""===pageTitle||angular.isUndefined(pageTitle)||$scope.conference.registrationPages.push({id:uuid(),conferenceId:$scope.conference.id,position:0,title:pageTitle,blocks:[]})})};var hiddenPages=[];$scope.togglePage=function(id){_.contains(hiddenPages,id)?_.remove(hiddenPages,function(p){return p===id}):hiddenPages.push(id)},$scope.isPageHidden=function(id){return _.contains(hiddenPages,id)},$scope.movePage=function(pageId,newPosition){var origPageIndex=_.findIndex($scope.conference.registrationPages,{id:pageId}),origPage=$scope.conference.registrationPages[origPageIndex];$scope.$apply(function(scope){scope.conference.registrationPages.splice(origPageIndex,1),scope.conference.registrationPages.splice(newPosition,0,origPage)})}}),angular.module("confRegistrationWebApp").service("AnswerCache",function($cacheFactory,$rootScope,$http,$q){var cache=$cacheFactory("answers"),blockIndex=$cacheFactory("blockIndex"),path=function(id){return"answers/"+(id||"")},update=function(path,object){updateServer(object),cache.put(path,object),blockIndex.put(object.block,object),$rootScope.$broadcast(path,object)},updateServer=function(answer){"preview"!==$rootScope.registerMode&&$http.put(path(answer.id),answer)},checkCache=function(path,callback){var cachedObject=cache.get(path);angular.isDefined(cachedObject)?callback(cachedObject,path):$http.get(path).success(function(conferences){cache.put(path,conferences),callback(conferences,path)})};this.query=function(id){checkCache(path(id),function(conferences,path){$rootScope.$broadcast(path,conferences)})},this.get=function(id){var defer=$q.defer();return checkCache(path(id),function(conferences){defer.resolve(conferences)}),defer.promise},this.put=function(answer){cache.put(path(answer.id),answer)},this.syncBlock=function(scope,name){scope.$watch(name,function(answer){angular.isDefined(answer)&&update(path(answer.id),answer)},!0)}}),angular.module("confRegistrationWebApp").service("RegistrationCache",function($cacheFactory,$rootScope,$http,$q){var cache=$cacheFactory("registration"),path=function(id){return"registrations/"+(id||"")},update=function(path,object){cache.put(path,angular.copy(object)),$rootScope.$broadcast(path,object)},checkCache=function(path,callback){var cachedObject=cache.get(path);angular.isDefined(cachedObject)?callback(cachedObject,path):$http.get(path).success(function(data){update(path,data),callback(data,path)})};this.update=function(path,registration,cb,errorCallback){if("preview"===$rootScope.registerMode)return $rootScope.previewRegCache=registration,void cb();var callback=cb||function(){cache.put(path,angular.copy(registration)),$rootScope.broadcast(path,registration)},cachedReg=cache.get(path);angular.equals(registration,cachedReg)||$http.put(path,registration).then(callback,errorCallback)},this.query=function(id){checkCache(path(id),function(conferences,path){$rootScope.$broadcast(path,conferences)})},this.emptyCache=function(){cache.removeAll()},this.get=function(id){var defer=$q.defer();return checkCache(path(id),defer.resolve),defer.promise},this.getCurrent=function(conferenceId){var defer=$q.defer();return checkCache("conferences/"+conferenceId+"/registrations/current",function(registration){"preview"===$rootScope.registerMode&&(angular.isUndefined($rootScope.previewRegCache)?(registration.completed=!1,registration.registrants=[],$rootScope.previewRegCache=registration):registration=$rootScope.previewRegCache),update(path(registration.id),registration),defer.resolve(registration)}),defer.promise},this.getAllForConference=function(conferenceId,callback){var defer=$q.defer();return checkCache("conferences/"+conferenceId+"/registrations",function(registrations){angular.forEach(registrations,function(registration){update(path(registration.id),registration)}),defer.resolve(registrations),angular.isDefined(callback)&&callback(registrations)}),defer.promise}}),angular.module("confRegistrationWebApp").service("ConfCache",function($cacheFactory,$rootScope,$http,$q,uuid){var cache=$cacheFactory("conf"),path=function(id){return"conferences/"+(id||"")},checkCache=function(path,callback){var cachedConferences=cache.get(path);angular.isDefined(cachedConferences)?callback(cachedConferences,path):$http.get(path).success(function(conferences){cache.put(path,conferences),callback(conferences,path)})};this.query=function(id){checkCache(path(id),function(conferences,path){$rootScope.$broadcast(path,conferences)})},this.get=function(id){var defer=$q.defer();return checkCache(path(id),function(conferences){defer.resolve(conferences)}),defer.promise},this.getCallback=function(id,callback){checkCache(path(id),function(conferences){callback(conferences)})},this.update=function(id,conference){cache.put(path(id),conference)},this.empty=function(){cache.removeAll()},this.create=function(name){var newConferenceId=uuid(),newPageId=uuid(),data={id:newConferenceId,name:name,registrationStartTime:moment().format("YYYY-MM-DD HH:mm:ss"),registrationEndTime:moment().add(14,"days").format("YYYY-MM-DD HH:mm:ss"),eventStartTime:moment().add(14,"days").format("YYYY-MM-DD HH:mm:ss"),eventEndTime:moment().add(20,"days").format("YYYY-MM-DD HH:mm:ss"),eventTimezone:"America/New_York",paymentGatewayType:"TRUST_COMMERCE",registrantTypes:[{id:uuid(),name:"Default",conferenceId:newConferenceId,cost:0,earlyRegistrationCutoff:moment().add(7,"days").format("YYYY-MM-DD HH:mm:ss")}],registrationPages:[{id:newPageId,conferenceId:newConferenceId,title:"Your Information",position:0,blocks:[{id:uuid(),pageId:newPageId,type:"nameQuestion",profileType:"NAME",title:"Name",position:0,required:!0},{id:uuid(),pageId:newPageId,type:"emailQuestion",title:"Email",profileType:"EMAIL",position:1,required:!0}]}]};return $http.post(path(),data).then(function(response){if(201===response.status){var conference=response.data;return cache.removeAll(),conference}alert("Error creating conference. "+response.data.errorMessage+": "+response.data.customErrorMessage)})}}),angular.module("confRegistrationWebApp").service("RegViewCache",function($cacheFactory,$rootScope,$http,$q){var cache=$cacheFactory("regViews"),path=function(id){return"conferences/"+id+"/registration-views"},checkCache=function(path,callback){var cachedViews=cache.get(path);angular.isDefined(cachedViews)?callback(cachedViews,path):$http.get(path).success(function(views){cache.put(path,views),callback(views,path)})};this.get=function(id,callback){var defer=$q.defer();return checkCache(path(id),function(views){defer.resolve(views),callback(views)}),defer.promise},this.update=function(id,views){cache.put(path(id),views)}}),angular.module("confRegistrationWebApp").service("ProfileCache",function($cacheFactory,$rootScope,$http,$q){var cache=$cacheFactory("profile"),path="profile",checkCache=function(path,callback){var cachedObject=cache.get(path);angular.isDefined(cachedObject)?callback(cachedObject,path):$http.get(path).success(function(profileData){cache.put(path,profileData),callback(profileData,path)})};this.get=function(){var defer=$q.defer();return checkCache(path,function(profileData){defer.resolve(profileData)}),defer.promise},this.getCache=function(callback){checkCache(path,function(profileData){callback(profileData)})}}),angular.module("confRegistrationWebApp").controller("createEventCtrl",function($scope,ConfCache,$modalInstance,defaultValue){$scope.name=defaultValue,$scope.close=function(){$modalInstance.close("")},$scope.submit=function(newConfName){$modalInstance.close(newConfName)}}),angular.module("confRegistrationWebApp").controller("confirmCtrl",function($scope,ConfCache,$modalInstance){$scope.close=function(){$modalInstance.close(!1)},$scope.submit=function(){$modalInstance.close(!0)}}),angular.module("confRegistrationWebApp").controller("confirmPromptCtrl",function($scope,$modalInstance){$scope.close=function(){$modalInstance.close("")},$scope.submit=function(newPageName){$modalInstance.close(newPageName)}}),angular.module("confRegistrationWebApp").constant("enforceAuth",function($rootScope,$route,$modal,$cookies,$q,$location,$window,$routeParams,apiUrl,$http,ProfileCache){var defer=$q.defer(),noAuthControllers=["RegistrationCtrl","paymentCtrl","ReviewRegistrationCtrl"],loginDialogOptions={templateUrl:"views/modals/41638c29.dee070a1.loginDialog.html",controller:"LoginDialogCtrl",backdrop:"static",keyboard:!1};return/^\/auth\/.*/.test($location.url())||($cookies.intendedRoute=$location.path(),angular.isDefined($routeParams.regType)&&($cookies.regType=$routeParams.regType)),noAuthControllers.indexOf($route.current.$$route.controller)>=0?angular.isDefined($cookies.crsToken)&&""!==$cookies.crsToken?defer.resolve("Authorization present."):$http.get("conferences/"+$route.current.params.conferenceId).success(function(conference){conference.requireLogin?$modal.open(loginDialogOptions):$window.location.href=apiUrl+"auth/none/login"}):angular.isDefined($cookies.crsToken)&&""!==$cookies.crsToken&&"NONE"!==$cookies.crsAuthProviderType?(defer.resolve("Authorization present."),angular.isUndefined($rootScope.globalGreetingName)&&ProfileCache.getCache(function(data){$rootScope.globalGreetingName=data.firstName})):$modal.open(loginDialogOptions),defer.promise}),angular.module("confRegistrationWebApp").controller("LoginDialogCtrl",function($rootScope,$scope,apiUrl){$rootScope.globalPage={type:"","class":"",title:"",confId:0,footer:!1},$scope.apiUrl=apiUrl}),angular.module("confRegistrationWebApp").directive("showAnswer",function(){return{templateUrl:"views/components/0f77a62b.0f77a62b.adminAnswerDisplay.html",restrict:"E",scope:{block:"=",registrant:"="},controller:function($scope){if(angular.isDefined($scope.registrant)&&$scope.registrant.answers){var answerObject=_.find($scope.registrant.answers,{blockId:$scope.block.id});answerObject&&($scope.answer=answerObject)}$scope.getSelectedCheckboxes=function(choices){return _.keys(_.pick(choices,function(val){return val===!0}))}}}}),angular.module("confRegistrationWebApp").directive("ngEnter",function(){return function(scope,element,attrs){element.bind("keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.ngEnter)}),event.preventDefault())})}}),angular.module("confRegistrationWebApp").directive("selectOnClick",function(){return{restrict:"A",link:function(scope,element,attrs){element.on("click",function(){var elementToSelect=attrs.selectOnClick;_.isEmpty(elementToSelect)?this.select():document.getElementById(elementToSelect).select()})}}}),angular.module("confRegistrationWebApp").filter("joiner",function(){return function(input,separator){return angular.isArray(input)?input.join(separator||", "):input}}),angular.module("confRegistrationWebApp").filter("evtDateFormat",function(){return function(date,zone){return moment.tz(date,zone).format("MMM D, YYYY h:mm a z")}}),angular.module("confRegistrationWebApp").service("Model",function($cacheFactory,$rootScope,$http,$q){var cache=$cacheFactory("cache"),thisModel=this;this.create=function(path,object){return $http.post(path,object).then(function(response){var createdObjectPath=response.headers("Location"),createdObject=response.data;return cache.put(createdObjectPath,createdObject),cache.get(path)&&thisModel.get(path).then(function(parentCollection){parentCollection.push(createdObject),cache.put(path,parentCollection),$rootScope.$broadcast(path,parentCollection)}),angular.copy(createdObject)})},this.get=function(path){return cache.get(path)?$q.when(angular.copy(cache.get(path))):$http.get(path).then(function(response){return cache.put(path,response.data),angular.copy(response.data)})},this.delete=function(path){$http.delete(path).then(function(){cache.remove(path),$rootScope.$broadcast(path);var match=/\/?(.*\/)(.+)$/.exec(path),parentPath=match[1],removedObjectId=match[2];cache.get(parentPath)&&thisModel.get(parentPath).then(function(oldParentCollection){var parentCollection=_.reject(oldParentCollection,{id:removedObjectId});cache.put(parentPath,parentCollection),$rootScope.$broadcast(parentPath,parentCollection)})})},this.subscribe=function(scope,name,path){scope.$watch(name,function(object){if(angular.isDefined(object)){var cb=function(){cache.put(path,angular.copy(object)),$rootScope.$broadcast(path,object,scope.$id)};thisModel.update(path,object,cb)}},!0),scope.$on(path,function(event,object,originScopeId){scope.$id!==originScopeId&&(scope[name]=angular.copy(object))}),thisModel.get(path).then(function(object){scope[name]=angular.copy(object)})},this.update=function(path,object,cb){var callback=cb||function(){cache.put(path,angular.copy(object)),$rootScope.$broadcast(path,object)};angular.equals(object,cache.get(path))||$http.put(path,object).then(callback)}}),angular.module("confRegistrationWebApp").directive("crsDatetimepicker",function(){return{templateUrl:"views/components/5bf70d48.5bf70d48.datepicker.html",restrict:"E",scope:{localModel:"=model"},controller:function($timeout,$scope){$scope.updateTimeStamp=function(timestamp){$scope.$apply(function(){$scope.localModel=moment(timestamp).format("YYYY-MM-DD HH:mm:ss")})}},link:function(scope,element){var datePickerElement=jQuery(element).find(".datepicker");datePickerElement.datetimepicker({defaultDate:moment(scope.localModel).format("MM/DD/YYYY hh:mm A")}).on("dp.change",function(ev){scope.updateTimeStamp(ev.date)}),scope.$on("$destroy",function(){angular.isDefined(datePickerElement.data("DateTimePicker"))&&datePickerElement.data("DateTimePicker").destroy()})}}}),angular.module("confRegistrationWebApp").controller("paymentCtrl",function($scope,$rootScope,$location,registration,conference,$http,$modal,RegistrationCache){$rootScope.globalPage={type:"registration",mainClass:"front-form",bodyClass:"frontend",title:conference.name,confId:conference.id,footer:!1},$scope.currentYear=(new Date).getFullYear(),registration.completed?($scope.paymentButtonValue="Process Payment",$scope.amount=registration.remainingBalance):$scope.paymentButtonValue="Continue",$scope.currentRegistration=registration,$scope.conference=conference,$scope.cancel=function(){$location.path(registration.completed?"/register/"+conference.id:"/reviewRegistration/"+conference.id)},$scope.createPayment=function(){var errorModalOptions={};if(!$scope.creditCardNameOnCard)return errorModalOptions={templateUrl:"views/modals/dc0a9a58.dc0a9a58.errorModal.html",controller:"genericModal",resolve:{data:function(){return"Please enter the name on your card."}}},void $modal.open(errorModalOptions);if(!$scope.creditCardNumber)return errorModalOptions={templateUrl:"views/modals/dc0a9a58.dc0a9a58.errorModal.html",controller:"genericModal",resolve:{data:function(){return"Please enter your card number."}}},void $modal.open(errorModalOptions);if(!$scope.creditCardExpirationMonth||!$scope.creditCardExpirationYear)return errorModalOptions={templateUrl:"views/modals/dc0a9a58.dc0a9a58.errorModal.html",controller:"genericModal",resolve:{data:function(){return"Please enter card expiration date."}}},void $modal.open(errorModalOptions);if($rootScope.currentPayment={amount:$scope.amount,paymentType:"CREDIT_CARD",creditCard:{nameOnCard:$scope.creditCardNameOnCard,expirationMonth:$scope.creditCardExpirationMonth,expirationYear:$scope.creditCardExpirationYear,number:$scope.creditCardNumber,cvvNumber:$scope.creditCardCVVNumber}},registration.completed){var currentPayment=angular.copy($rootScope.currentPayment);currentPayment.readyToProcess=!0,currentPayment.registrationId=registration.id,$http.post("payments/",currentPayment).success(function(){RegistrationCache.emptyCache(),delete $rootScope.currentPayment,$location.path("/register/"+conference.id)}).error(function(){var errorModalOptions={templateUrl:"views/modals/dc0a9a58.dc0a9a58.errorModal.html",controller:"genericModal",backdrop:"static",keyboard:!1,resolve:{data:function(){return"Your card was declined, please verify and re-enter your details or use a different card."}}};$modal.open(errorModalOptions)})}else $location.path("/reviewRegistration/"+conference.id)}}),angular.module("confRegistrationWebApp").directive("adminNav",function($http,ConfCache){return{templateUrl:"views/components/2d7a6bc5.2d7a6bc5.adminNav.html",restrict:"A",controller:function($scope,$modal,$location){$scope.archiveEvent=function(conferenceId){$modal.open({templateUrl:"views/modals/2bd8bdd4.2bd8bdd4.archiveEvent.html",controller:"confirmCtrl"}).result.then(function(result){result&&ConfCache.getCallback(conferenceId,function(conference){conference.archived=!0,$http({method:"PUT",url:"conferences/"+conferenceId,data:conference}).success(function(){ConfCache.empty(),$location.path("/eventDashboard")}).error(function(data){alert("Error: "+data)})})})}}}}),angular.module("confRegistrationWebApp").controller("eventPermissionsCtrl",function($rootScope,$scope,$http,$sce,conference,permissions,permissionConstants){$rootScope.globalPage={type:"admin",mainClass:"registrations",bodyClass:"",title:conference.name,confId:conference.id,footer:!0},$scope.templateUrl=permissions.permissionInt>=permissionConstants.FULL?"views/e318ac01.e318ac01.eventPermissions.html":"views/2c2a6d65.2c2a6d65.permissionError.html",$scope.conference=conference;var getPermissions=function(){$http({method:"GET",url:"conferences/"+conference.id+"/permissions"}).success(function(data){$scope.currentPermissions=data
}).error(function(){})};getPermissions(),$scope.updatePermission=function(id){$http({method:"PUT",url:"permissions/"+id,data:_.find($scope.currentPermissions,{id:id})}).success(function(){$scope.notify={"class":"alert-success",message:$sce.trustAsHtml("User updated.")}}).error(function(data){$scope.notify={"class":"alert-danger",message:$sce.trustAsHtml("Error: "+data)}})},$scope.addPermission=function(addPermissionsEmail,addPermissionsLevel){var postData={conferenceId:conference.id,emailAddress:addPermissionsEmail,permissionLevel:addPermissionsLevel};$http({method:"POST",url:"conferences/"+conference.id+"/permissions",data:postData}).success(function(){getPermissions(),$scope.$$childHead.addPermissionsEmail="",$scope.$$childHead.addPermissionsLevel="",$scope.notify={"class":"alert-success",message:$sce.trustAsHtml("User added.")}}).error(function(data){$scope.notify={"class":"alert-danger",message:$sce.trustAsHtml("Error: "+data)}})},$scope.deletePermission=function(id){$http({method:"DELETE",url:"permissions/"+id}).success(function(){getPermissions(),$scope.notify={"class":"alert-success",message:$sce.trustAsHtml("User removed.")}}).error(function(data){$scope.notify={"class":"alert-danger",message:$sce.trustAsHtml("Error: "+data)}})}}),angular.module("confRegistrationWebApp").controller("ActiviatePermissionCtrl",function($scope,$route,$http,$location,$timeout){var permissionAuthCode=$route.current.params.permissionAuthCode;$scope.message="Verifying Auth Code...",$http({method:"PUT",url:"permissions/"+permissionAuthCode+"/accept",data:"{}"}).success(function(){$scope.message="Success! Permission has been granted.  Redirecting now...",$timeout(function(){$location.path("/")},2e3)}).error(function(data,status){404===status?$scope.message="Error: Permission auth code was not found.":403===status&&($scope.message="Error: Permission auth code has already been used or is more than 2 months old.")})}),angular.module("confRegistrationWebApp").directive("nameQuestion",function(){return{templateUrl:"views/blocks/c424d456.c424d456.nameQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("addressQuestion",function(){return{templateUrl:"views/blocks/00f44498.00f44498.addressQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("checkboxQuestion",function(){return{templateUrl:"views/blocks/749295b3.749295b3.checkboxQuestion.html",restrict:"E",controller:function($scope){$scope.wizard?$scope.answer={value:{}}:$scope.$watch("answer.value",function(){angular.isDefined($scope.answer)&&($scope.atLeastOneChecked=angular.isDefined(_.findKey($scope.answer.value,function(v){return v===!0}))?!0:!1)},!0)}}}),angular.module("confRegistrationWebApp").directive("emailQuestion",function(){return{templateUrl:"views/blocks/5c891852.5c891852.emailQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("numberQuestion",function(){return{templateUrl:"views/blocks/34248f52.34248f52.numberQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("phoneQuestion",function(){return{templateUrl:"views/blocks/b685c66f.b685c66f.phoneQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("radioQuestion",function(){return{templateUrl:"views/blocks/1fe5981c.1fe5981c.radioQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("selectQuestion",function(){return{templateUrl:"views/blocks/f555f855.f555f855.selectQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("textQuestion",function(){return{templateUrl:"views/blocks/19d585e4.19d585e4.textQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("genderQuestion",function(){return{templateUrl:"views/blocks/66ed3b30.66ed3b30.genderQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("dateQuestion",function(){return{templateUrl:"views/blocks/d8183b9c.d8183b9c.dateQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").directive("yearInSchoolQuestion",function(){return{templateUrl:"views/blocks/7b6252eb.7b6252eb.yearInSchoolQuestion.html",restrict:"E"}}),angular.module("confRegistrationWebApp").service("PermissionCache",function($cacheFactory,$rootScope,$http,$q){var cache=$cacheFactory("permission"),path=function(conferenceId){return"conferences/"+conferenceId+"/permissions/current"},update=function(path,object){cache.put(path,object),$rootScope.$broadcast(path,object)},checkCache=function(path,callback){var cachedObject=cache.get(path);angular.isDefined(cachedObject)?callback(cachedObject,path):$http.get(path).success(function(data){switch(data.permissionLevel){case"CREATOR":data.permissionInt=4;break;case"FULL":data.permissionInt=3;break;case"UPDATE":data.permissionInt=2;break;case"VIEW":data.permissionInt=1;break;default:data.permissionInt=0}update(path,data),callback(data,path)})};this.getForConference=function(conferenceId){var defer=$q.defer();return checkCache(path(conferenceId),defer.resolve),defer.promise}}),angular.module("confRegistrationWebApp").constant("permissionConstants",{CREATOR:4,FULL:3,UPDATE:2,VIEW:1,NONE:0}),angular.module("confRegistrationWebApp").controller("genericModal",function($scope,$modalInstance,data){$scope.data=data,$scope.close=function(){$modalInstance.close("")}}),angular.module("confRegistrationWebApp").controller("paymentModal",function($scope,$modalInstance,$http,registration,conference,RegistrationCache){$scope.registration=registration,$scope.conference=conference,$scope.currentYear=(new Date).getFullYear(),$scope.processing=!1,$scope.close=function(){$modalInstance.close($scope.registration)},$scope.registrantName=function(registrantId){var nameBlock=_.find(_.flatten(conference.registrationPages,"blocks"),{profileType:"NAME"}).id,registrant=_.find(registration.registrants,{id:registrantId});return nameBlock=_.find(registrant.answers,{blockId:nameBlock}).value,nameBlock.firstName+" "+nameBlock.lastName},$scope.newPayment={registrationId:registration.id,amount:registration.calculatedTotalDue},$scope.updateCostRegistration=[],angular.forEach(registration.registrants,function(r){$scope.updateCostRegistration[r.id]=r.totalDue}),$scope.processPayment=function(){return _.isEmpty($scope.newPayment.paymentType)?void alert("Please select a payment type."):Number($scope.newPayment.amount)<=0||_.isEmpty($scope.newPayment.amount)?void alert("Payment amount must be a positive number."):($scope.processing=!0,$scope.newPayment.readyToProcess=!0,void $http.post("payments/",$scope.newPayment).success(function(){$http.get("registrations/"+$scope.registration.id).success(function(data){$scope.registration=data,$scope.processing=!1,$scope.close()}),delete $scope.newPayment}).error(function(){alert("Payment failed..."),$scope.processing=!1}))},$scope.canBeRefunded=function(payment){var sum=0;return _.each($scope.registration.pastPayments,function(prevRefund){"CREDIT_CARD_REFUND"!==prevRefund.paymentType&&"REFUND"!==prevRefund.paymentType||prevRefund.refundedPaymentId!==payment.id||(sum+=prevRefund.amount)}),"CREDIT_CARD_REFUND"!==payment.paymentType&&"REFUND"!==payment.paymentType&&sum<payment.amount},$scope.refund=function(payment){var refund;refund="CREDIT_CARD"===payment.paymentType?{amount:payment.amount,refundedPaymentId:payment.id,registrationId:payment.registrationId,paymentType:"CREDIT_CARD_REFUND",creditCard:{lastFourDigits:payment.creditCard.lastFourDigits},readyToProcess:!0}:{amount:payment.amount,refundedPaymentId:payment.id,registrationId:payment.registrationId,paymentType:"REFUND",readyToProcess:!0},$scope.processing=!0,$http.post("payments/",refund).success(function(){$http.get("registrations/"+$scope.registration.id).success(function(data){$scope.registration=data,$scope.processing=!1})}).error(function(){alert("Refund failed..."),$scope.processing=!1})},$scope.saveCost=function(){var updatedRegistration=angular.copy(registration);angular.forEach(updatedRegistration.registrants,function(r){r.totalDue=Number($scope.updateCostRegistration[r.id])}),RegistrationCache.update("registrations/"+updatedRegistration.id,updatedRegistration,function(){RegistrationCache.emptyCache(),RegistrationCache.get(updatedRegistration.id).then(function(data){$scope.registration=data}),$scope.showUpdateCost=!1},function(){alert("Error updating total cost")})},$scope.toggleCostUpdate=function(v){$scope.showUpdateCost=v}}),angular.module("confRegistrationWebApp").controller("deleteRegistrationCtrl",function($scope,ConfCache,$modalInstance){$scope.close=function(){$modalInstance.close(!1)},$scope.delete=function(){$modalInstance.close(!0)}}),angular.module("confRegistrationWebApp").controller("registrationModal",function($scope,$modalInstance,$http,$route,conference,uuid,RegistrationCache){$scope.conference=conference,$scope.form={type:_.first(conference.registrantTypes).id},$scope.register=function(){var registrationId=uuid(),registration={id:registrationId,conferenceId:conference.id,completed:!0,registrants:[{id:uuid(),registrantTypeId:$scope.form.type,registrationId:registrationId,answers:[]}]};angular.forEach(_.flatten(conference.registrationPages,"blocks"),function(block){if("EMAIL"===block.profileType||"NAME"===block.profileType){var answer={id:uuid(),registrantId:registration.id,blockId:block.id};"EMAIL"===block.profileType?answer.value=$scope.form.email:"NAME"===block.profileType&&(answer.value={firstName:$scope.form.first,lastName:$scope.form.last}),registration.registrants[0].answers.push(answer)}}),$http.post("conferences/"+conference.id+"/registrations",registration,{headers:{"Registration-Type":"on-behalf-of"}}).success(function(){RegistrationCache.emptyCache(),$route.reload()}).error(function(data){console.log("Error: "+data)}),$modalInstance.close()},$scope.close=function(){$modalInstance.close()}}),angular.module("confRegistrationWebApp").service("RegistrationsViewService",function(ConferenceHelper,U){this.getTable=function(conference,registrations,onlyCompleted){var table=[],header=getHeader(conference);table.push(header);var rows=getRows(conference,registrations,onlyCompleted);return U.sortArrayByIndex(rows,_.findIndex(header,function(string){return angular.equals(string,"Last")})),table.push.apply(table,rows),table};var getHeader=function(conference){var blocks=ConferenceHelper.getPageBlocks(conference.registrationPages),header=getBlockTitles(blocks);return header},getRows=function(conference,registrations,onlyCompleted){var rows=[],blocks=ConferenceHelper.getPageBlocks(conference.registrationPages);return ConferenceHelper.getRegistrations(registrations,onlyCompleted).forEach(function(registration){angular.forEach(registration.registrants,function(r){var row=[];angular.forEach(blocks,function(block){var answer=ConferenceHelper.findAnswerByBlockId(r.answers,block.id),content=ConferenceHelper.getContentByBlockType(U.isEmpty(answer)?answer:answer.value,block.type);row.push.apply(row,content)}),rows.push(row)})}),rows},getBlockTitles=function(blocks){var titles=[];return angular.forEach(blocks,function(block){"nameQuestion"===block.type?(titles.push("First"),titles.push("Last")):"addressQuestion"===block.type?(titles.push("Address1"),titles.push("Address2"),titles.push("City"),titles.push("State"),titles.push("Zip")):titles.push(block.title)}),titles}}),angular.module("confRegistrationWebApp").service("PaymentsViewService",function(ConferenceHelper,U){this.getTable=function(conference,registrations){var table=[],header=getHeader();table.push(header);var rows=getRows(conference,registrations);return U.sortArrayByIndex(rows,_.findIndex(header,function(string){return angular.equals(string,"Last")})),table.push.apply(table,rows),table};var getHeader=function(){var header=[];return header.push("First"),header.push("Last"),header.push("Payment"),header.push("Type"),header.push("Date"),header},getRows=function(conference,registrations){var rows=[],blocks=ConferenceHelper.getPageBlocks(conference.registrationPages);return registrations.forEach(function(registration){if(registration.completed){var name;angular.isDefined(registration.registrants[0])&&(name=ConferenceHelper.getRegistrantName(registration.registrants[0].answers,blocks)),registration.pastPayments.length>0&&angular.forEach(registration.pastPayments,function(payment){var row=[];row.push.apply(row,name),row.push("$"+U.getValue(payment.amount,"0")),row.push(U.getValue(payment.paymentType)),row.push(U.getDate(payment.transactionDatetime)),rows.push(row)})}}),rows}}),angular.module("confRegistrationWebApp").service("ConferenceHelper",function(U){this.getRegistrations=function(registrations,onlyCompleted){return onlyCompleted?_.filter(registrations,function(item){return item.completed!==!1}):registrations},this.getContentByBlockType=function(value,type){if(U.isEmpty(value)){var content=[];return angular.equals(type,"nameQuestion")?content.push(""):angular.equals(type,"addressQuestion")&&(content.push(""),content.push(""),content.push(""),content.push("")),content.push(""),content}return _getContentByBlockType(value,type)};var _getContentByBlockType=function(value,type){var content=[];return angular.equals(type,"nameQuestion")?(content.push(window.S(U.getValue(value.firstName)).capitalize()),content.push(window.S(U.getValue(value.lastName)).capitalize())):angular.equals(type,"checkboxQuestion")?content.push(U.joiner(U.getValue(U.getKeysWhere(value,!0))," ")):angular.equals(type,"addressQuestion")?(content.push(U.getValue(value.address1)),content.push(U.getValue(value.address2)),content.push(U.getValue(value.city)),content.push(U.getValue(value.state)),content.push(U.getValue(value.zip))):content.push(U.getValue(value)),content};this.getRegistrantName=function(answers,blocks){var answer=this.findAnswerByBlockType(answers,blocks,"nameQuestion","NAME");return this.getContentByBlockType(U.isEmpty(answer)?answer:answer.value,"nameQuestion")},this.findAnswerByBlockType=function(answers,blocks,blockType,profileType){var block=this.findBlockByType(blocks,blockType,profileType);return U.isEmpty(block)?(block=this.findBlockByType(blocks,blockType),U.isEmpty(block)?null:this.findAnswerByBlockId(answers,block.id)):this.findAnswerByBlockId(answers,block.id)},this.findBlockByType=function(blocks,blockType,profileType){return _.find(blocks,function(block){return U.isEmpty(profileType)?block.type===blockType&&block.type:block.type===blockType&&block.profileType===profileType})},this.findAnswerByBlockId=function(answers,blockId){return _.find(answers,function(answer){return angular.equals(answer.blockId,blockId)})},this.getPageBlocks=function(pages){var blocks=[];return angular.forEach(pages,function(page){angular.forEach(page.blocks,function(block){-1===block.type.indexOf("Content")&&blocks.push(block)})}),blocks},this.hasCost=function(conference){return _.max(_.flatten(conference.registrantTypes,"cost"))>0}}),angular.module("confRegistrationWebApp").service("U",function(){this.joiner=function(input,separator){return angular.isArray(input)?input.join(separator):input},this.getKeysWhere=function(object,value){return _.keys(_.pick(object,function(val){return val===value}))},this.isEmpty=function(value){return!(value||value===!1)},this.getValue=function(string,value){return this.isEmpty(string)?this.isEmpty(value)?"":value:string},this.stringifyArray=function(array,separator,string){if(this.isEmpty(string)&&(string=""),array.length<=0)return"";if(!angular.isArray(array[0]))return array.join(separator)+"\n";for(var i=0;i<array.length;i++)string+=this.stringifyArray(array[i],separator,string);return string},this.getDate=function(dateTime){var date=this.getValue(dateTime);return this.isEmpty(dateTime)||(date=new Date(dateTime)),date},this.sortArrayByIndex=function(array,index){array.sort(function(a,b){return a[index]<b[index]?-1:a[index]>b[index]?1:0})},this.submitForm=function(path,params,method){method=method||"post";var form=document.createElement("form");form.setAttribute("method",method),form.setAttribute("action",path),form.setAttribute("enctype","multipart/form-data");for(var key in params)if(params.hasOwnProperty(key)){var hiddenField=document.createElement("input");hiddenField.setAttribute("type","hidden"),hiddenField.setAttribute("name",key),hiddenField.setAttribute("value",params[key]),form.appendChild(hiddenField)}document.body.appendChild(form),form.submit()}}),angular.module("confRegistrationWebApp").service("validateRegistrant",function(){this.validate=function(conference,registrant){var invalidBlocks=[];return conference=angular.copy(conference),angular.forEach(conference.registrationPages,function(page){var pageIndex=_.findIndex(conference.registrationPages,{id:page.id});angular.forEach(page.blocks,function(block){_.contains(block.registrantTypes,registrant.registrantTypeId)&&_.remove(conference.registrationPages[pageIndex].blocks,function(b){return b.id===block.id})})}),angular.forEach(_.flatten(conference.registrationPages,"blocks"),function(block){if(block.required){var answer=_.find(registrant.answers,{blockId:block.id});if(angular.isUndefined(answer))return void invalidBlocks.push(block.id);switch(answer=answer.value,block.type){case"nameQuestion":if(angular.isUndefined(answer.firstName)||angular.isUndefined(answer.lastName))return void invalidBlocks.push(block.id);if(_.isEmpty(answer.firstName)||_.isEmpty(answer.lastName))return void invalidBlocks.push(block.id);break;default:if(angular.isUndefined(answer))return void invalidBlocks.push(block.id);if(_.isEmpty(answer))return void invalidBlocks.push(block.id)}}}),invalidBlocks}});